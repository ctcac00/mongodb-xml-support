/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mongodb.xml.support;

import org.bson.BsonObjectId;
import org.bson.Document;
import org.bson.types.Binary;
import org.json.JSONObject;
import org.json.XML;

import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class App {

    private static final Logger logger = LoggerFactory.getLogger(App.class);

    public static void main(String[] args) {

        if (args.length != 2) {
            logger.error("Usage: <MongoDB URI> <XML input file>");
            System.exit(0);
        }

        MongoDBHelper mongodb = new MongoDBHelper(args[0]);
        String dbName = "test";
        String collectionName = "test";

        try {
            // Read XML file
            Path path = Paths.get(args[1]);
            String xmlStr = new String(Files.readAllBytes(path), StandardCharsets.UTF_8);

            logger.info("XML file:\n" + xmlStr);

            // Parse file to JSON
            JSONObject xmlJSONObj = XML.toJSONObject(xmlStr);
            String jsonStr = xmlJSONObj.toString(4);

            Document doc = Document.parse(jsonStr);
            // Add originalXML
            doc.append("originalXML", xmlStr);

            // Compress XML
            byte[] res1 = CompressionUtils.compress(xmlStr.getBytes());

            // Add binary zipped XML
            doc.append("xmlBlob", res1);

            logger.info("MongoDB document to be inserted:\n" + doc.toString());

            // Insert Document in MongoDB
            BsonObjectId result = mongodb.insertDocument(dbName, collectionName, doc);

            // Find Document in MongoDB
            Document doc2 = mongodb.findDocument(dbName, collectionName, result);
            logger.info("MongoDB document in database:\n" + doc2.toString());

            // get xmlBlob data
            byte[] xmlBlob = ((Binary) doc2.get("xmlBlob")).getData();
            // decompress xmlBlob
            byte[] origXML = CompressionUtils.decompress(xmlBlob);

            logger.info("Original XML decompressed from database:\n" + new String(origXML));

        } catch (Exception e) {
            logger.error("Error occurred during XML to MongoDB conversion:", e);
            e.printStackTrace();
        }
    }
}
